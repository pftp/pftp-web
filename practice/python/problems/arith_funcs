### prompt
Write a function called arith0(x, y, z) that takes three integers x, y, z as
arguments and returns (x {{ op0 }} y) {{ op1 }} z. Then, write another function
arith1(x, y, z) that takes three integers x, y, z as arguments and
returns (arith0(x, y, z) {{ op0 }} arith0(x, y, z)) {{ op1 }} arith0(x, y, z).
Finally, print arith0({{ x }}, {{ y }}, {{ z }}) and print
arith1({{ x }}, {{ y }}, {{ z }}).

### solution
def arith0(x, y, z):
  return (x {{ op0 }} y) {{ op1 }} z

def arith1(x, y, z):
  a0 = arith0(x, y, z)
  return (a0 {{ op0 }} a0) {{ op1 }} a0

print arith0({{ x }}, {{ y }}, {{ z }})
print arith1({{ x }}, {{ y }}, {{ z }})

### test
for a in {{ as }}:
  for b in {{ bs }}:
    for c in {{ cs }}:
      print arith0(a, b, c)
      print arith1(a, b, c)

### hint
Did you remember to call both your functions to test them at the end of the
program?<br>
Here's a function called arith2(x, y, z) that takes three integers x, y, z as
arguments and returns (arith1(x, y, z) - arith1(x, y, z)) * arith1(x, y, z):
<pre>
def arith2(x, y, z):
  a1 = arith1(x, y, z)
  return (a1 - a1) * a1
</pre>

### gen_template_vars
res = {
  'x': rand_int(-100, 100),
  'y': rand_int(-100, 100),
  'z': rand_int(-100, 100),
  'as': rand_int_list(10),
  'bs': rand_int_list(10),
  'cs': rand_int_list(10),
  'op0': choice(['+', '-', '*']),
  'op1': choice(['+', '-', '*'])
}

