### prompt
Write a function called get_date that takes an integer number of days as its
argument and returns a string that is a date formatted as "month day,
year". Consider day 0 to be January 1, 1970. For example, get_date(3) should
return "January 4, 1970". No need to account for years BCE.

### solution
function is_leap_year(year) {
  return year % 4 === 0 && (year % 100 != 0 || year % 400 == 0);
}

function get_year_days(year) {
  return (is_leap_year(year)? 366 : 365);
}

function get_month_days(month, year) {
  if (month === 1)
    return (is_leap_year(year) ? 29 : 28);
  if (month === 3 || month === 5 || month === 8 || month === 10)
    return 30;
  return 31;
}

function get_month_string(month) {
  var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July',
      'August', 'September', 'October', 'November', 'December'];
  return months[month];
}

function get_date(days) {
  var current_year = 1970;
  var current_month = 0;
  var current_day = 0;
  if (days > 0) {
    while (days >= get_year_days(current_year)) {
      days -= get_year_days(current_year);
      current_year += 1;
    }
    while (days >= get_month_days(current_month, current_year)) {
      days -= get_month_days(current_month, current_year);
      current_month += 1;
    }
  } else if (days < 0) {
    while (days <= -get_year_days(current_year-1)) {
      days += get_year_days(current_year-1);
      current_year -= 1;
    }
    if (days < 0) {
      current_month = 12;
      current_year -= 1;
    }
    while (days < 0) {
      days += get_month_days(current_month-1, current_year);
      current_month -= 1;
    }
  }
  month_str = get_month_string(current_month);
  return month_str + ' ' +  days+1 + ', ' + current_year;
}

### test
console.log(get_date(0));
console.log(get_date(365));
console.log(get_date(789));
console.log(get_date(-365));
console.log(get_date(-672));
for (var x in {{ xs }})
  console.log(get_date(x));

### hint
Leap years are those when the year number is divisible by 4, except for those
where the year number is divisible by 100 and not divisible by 400.<br>
Also, remember to account for negative numbers of days!

### gen_template_vars
xs = []
for i in range(5):
  xs.append(rand_int(-718685, 1000000))
res = {
  'xs': xs
}

