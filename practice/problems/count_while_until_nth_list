### prompt
Create a function count_until(words) which returns the number of values in the list before the {{ nth }} occurrence of "{{ value }}" using a while loop. The function should return the length of the list if "{{ value }}" appears fewer than {{ n }} times in the list.

### solution
def count_until(words):
  count = 0
  i = 0
  while i < len(words):
    if words[i] == "{{ value }}":
      count += 1
      if count == {{ n }}:
        break
    i += 1
  return i

### test
print count_until([1,2,3,4])
print count_until([1,"{{ value }}","{{ value }}"])
print count_until([1,2,"{{ value }}",3,4, "{{ value }}", 5,6, "{{ value }}", 7,8])
print count_until([1,2,"{{ value }}",3,4, "{{ value }}", 5,6, "{{ value }}", 7,8, "{{ value }}", 4, "{{ value }}", 6])

### hint
Here's how you can exit a while loop upon encountering a certain value:
<pre>
count = 0
foo = [1,2,3,4,5,5,7,4,5,4,3,6,5]
i = 0
while i < len(foo):
  if foo[i] != 5:
    count = count + 1
  else:
    break
  i = i + 1
</pre>

### gen_template_vars
n = rand_int(2,5)
words = rand_word_list(rand_int(10, 20))
res = {
  'words': words,
  'value': words[rand_int(0, len(words) - 1)],
  'n': n,
  'nth': nth(n)
}
