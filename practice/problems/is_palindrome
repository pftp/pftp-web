### prompt
Write a function called is_palindrome that takes a string as an argument and returns True if and only if that string is a palindrome (is exactly the same forwards and backwards, including capitalization).

### solution
def is_palindrome(s):
  for i in range(len(s)/2):
    if s[i] != s[-i-1]:
      return False
  return True

### test
print is_palindrome('')
for s in {{ x }}:
  print is_palindrome(s)

### hint
Here's code for the is_backwards function that takes two strings x and y as
arguments and returns True if and only if x is exactly the same as y backwards.
<pre>
def is_backwards(x, y):
  if len(x) != len(y):
    return False
  for i in range(len(x)):
    if x[i] != y[-i-1]:
      return False
  return True
</pre>

### gen_template_vars
x = rand_word_list(20)
for i, word in enumerate(x):
  if random() < 0.5:
    ch = ''
    if random() < 0.5:
      ch = rand_char()
    x[i] = word + ch + word[::-1]
res = {
  'x' : x
}

